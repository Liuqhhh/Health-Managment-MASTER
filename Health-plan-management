// models/HealthPlan.js  
const mongoose = require('mongoose');  
  
const HealthPlanSchema = new mongoose.Schema({  
  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },  
  plan: { type: String, required: true }, // JSON string or other format  
  startDate: { type: Date, required: true },  
  endDate: { type: Date },  
  progress: { type: Number, default: 0 }  
});  
  
module.exports = mongoose.model('HealthPlan', HealthPlanSchema);  
  
// routes/healthPlan.js  
const express = require('express');  
const router = express.Router();  
const HealthPlan = require('../models/HealthPlan');  
const jwtMiddleware = require('../middlewares/jwtMiddleware');  
  
// Create health plan  
router.post('/', jwtMiddleware, async (req, res) => {  
  const { plan, startDate, endDate } = req.body;  
  const healthPlan = new HealthPlan({  
    userId: req.user.userId,  
    plan,  
    startDate,  
    endDate  
  });  
  try {  
    await healthPlan.save();  
    res.status(201).send('Health plan created successfully');  
  } catch (error) {  
    res.status(400).send(error.message);  
  }  
});  
  
// Get health plans  
router.get('/', jwtMiddleware, async (req, res) => {  
  try {  
    const healthPlans = await HealthPlan.find({ userId: req.user.userId });  
    res.json(healthPlans);  
  } catch (error) {  
    res.status(500).send('Server error');  
  }  
});  
  
// Update health plan progress  
router.put('/:id', jwtMiddleware, async (req, res) => {  
  try {  
    const healthPlan = await HealthPlan.findByIdAndUpdate(req.params.id, { progress: req.body.progress }, { new: true });  
    if (!healthPlan) {  
      return res.status(404).send('Health plan not found');  
    }  
    res.json(healthPlan);  
  } catch (error) {  
    res.status(500).send('Server error');  
  }  
});  
  
module.exports = router;
